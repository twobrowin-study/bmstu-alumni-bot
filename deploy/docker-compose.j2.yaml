version: '3.9'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "500m"
    max-file: "2"

services:
  proxy:
    image: owasp/modsecurity-crs:4.2.0-nginx-alpine-202405060805
    logging: *default-logging
    ports:
      - target:    80
        published: 80
        protocol:  tcp
        mode:      host
      - target:    443
        published: 443
        protocol:  tcp
        mode:      host
      - target:    9000
        published: 9000
        protocol:  tcp
        mode:      host
      - target:    9001
        published: 9001
        protocol:  tcp
        mode:      host
    healthcheck:
      test:     curl -k --fail http://localhost/healthz || exit 1
      interval: 60s
      timeout:  20s
      retries:  3
    networks:
      - main
      - keycloak
    volumes:
      - "{{ letsencrypt_path }}:{{ letsencrypt_path }}:ro"
    configs:
      - source: nginx-default
        target: /etc/nginx/templates/conf.d/default.conf.template.conf

      - source: nginx-location-common
        target: /etc/nginx/templates/includes/location-common.conf.template.conf
      - source: nginx-proxy-include
        target: /etc/nginx/templates/includes/proxy-include.conf.template.conf
      - source: nginx-ssl
        target: /etc/nginx/templates/includes/ssl.conf.template.conf

      - source: modsecurity-main
        target: /etc/nginx/modsecurity.d/modsecurity.conf
      - source: modsecurity-setup
        target: /etc/nginx/modsecurity.d/setup.conf
      
      - source: empty-sh
        target: /docker-entrypoint.d/92-update-real_ip.sh
    environment:
      TZ: Europe/Moscow
      SERVER_NAME: "{{ secrets.server_name }}"
      
      PORT_HTTP:      "80"
      PORT_HTTPS:     "443"
      PORT_MINIO_API: "9000"
      PORT_MINIO_UI:  "9001"

      SSL_CERT:     "{{ letsencrypt_path }}/live/{{ secrets.server_name }}/fullchain.pem"
      SSL_CERT_KEY: "{{ letsencrypt_path }}/live/{{ secrets.server_name }}/privkey.pem"

      NGINX_ENVSUBST_TEMPLATE_DIR:    "/etc/nginx/templates"
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".template.conf"
      NGINX_ENVSUBST_OUTPUT_DIR:      "/etc/nginx"

      RESOLVER: "127.0.0.11"

      METRICS_ALLOW_FROM: "127.0.0.1"
      METRICS_DENY_FROM:  "all"

      SSL_SESSION_TIMEOUT: "1d"
      SSL_SESSION_CACHE:   "shared:MozSSL:10m"
      SSL_SESSION_TICKETS: "off"

      SSL_PROTOCOLS:      "TLSv1.2 TLSv1.3"
      SSL_CIPHERS:        "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
      SSL_PREFER_CIPHERS: "on"
      SSL_VERIFY:         "off"
      SSL_OCSP_STAPLING:  "off"

      STRICT_TRANSPORT_SECURITY: "max-age=31536000; includeSubdomains;"
      SERVER_TOKENS:             "off"
      X_FRAME_OPTIONS:           "SAMEORIGIN"
      X_CONTENT_TYPE_OPTIONS:    "nosniff"

      KEYCLOAK_PASS:  "http://keycloak:8080"
      UI_PASS:        "http://bmstu-alumni:8080"
      MINIO_API_PASS: "http://bmstu-alumni:9000"
      MINIO_UI_PASS:  "http://bmstu-alumni:9001"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == {{ placement.nginx }}

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    logging: *default-logging
    networks:
      - keycloak
    command: start
    environment:
      TZ: Europe/Moscow

      # This admin user should be disabled after first login
      KC_CREATE_ADMIN_USER:    'true'
      KEYCLOAK_ADMIN:          'admin'
      KEYCLOAK_ADMIN_PASSWORD: 'admin'

      KC_HTTP_ENABLED: 'true'

      KC_HOSTNAME:        '{{ secrets.server_name }}'
      KC_HOSTNAME_STRICT: 'true'

      KC_HTTP_RELATIVE_PATH: 'auth'
      KC_PROXY_HEADERS:      'xforwarded'

      KC_HEALTH_ENABLED:  'true'
      KC_METRICS_ENABLED: 'true'

      KC_DB: 'postgres'
      KC_DB_URL: 'jdbc:postgresql://keycloak-postgres:5432/postgres'
      KC_DB_USERNAME: 'postgres'
      KC_DB_PASSWORD: '{{ secrets.keycloak.postgres_password }}'

      KC_LOG_LEVEL: 'info'
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == {{ placement.keycloak }}
  
  keycloak-postgres:
    image: postgres:15.6
    logging: *default-logging
    volumes:
      - keycloak-data:/var/lib/postgresql/data
    networks:
      - keycloak
    environment:
      TZ: 'Europe/Moscow'
      PGDATA: '/var/lib/postgresql/data/pgdata'
      POSTGRES_PASSWORD: '{{ secrets.keycloak.postgres_password }}'
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == {{ placement.keycloak_postgres }}

  bmstu-alumni:
    image: twobrowin/bmstu-alumni-bot:1.4.1
    logging: *default-logging
    ports:
      - target:    5432
        published: 5432
        protocol:  tcp
        mode:      host
    networks:
      - main
    volumes:
      - data:/var/opt/box-bot
    environment:
      TZ: "Europe/Moscow"
      START_SERVICES: "true"
      PATH_PREFIX: "/bmstu-alumni"
      
      KEYCLOAK__URL: "https://{{ secrets.server_name }}/auth/"
      KEYCLOAK__REALM:  "{{ secrets.keycloak.realm }}"
      KEYCLOAK__CLIENT: "{{ secrets.keycloak.client }}"
      KEYCLOAK__SECRET: "{{ secrets.keycloak.secrets }}"
      KEYCLOAK__VERIFY: "false"
      
      TG_TOKEN: "{{ secrets.tg_api }}"
      
      PG_USER:     "{{ secrets.postgres.user }}"
      PG_PASSWORD: "{{ secrets.postgres.password }}"
      
      MINIO_HOST: "localhost:9000"
      MINIO_ROOT_USER:     "{{ secrets.minio.user }}"
      MINIO_ROOT_PASSWORD: "{{ secrets.minio.password }}"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == {{ placement.bot }}

  postgres-backup:
    image: prodrigestivill/postgres-backup-local:15-alpine
    logging: *default-logging
    networks:
      - main
    volumes:
      - backups:/backups
    environment:
      POSTGRES_DB: postgres
      POSTGRES_HOST: bmstu-alumni
      POSTGRES_USER: "{{ secrets.postgres.user }}"
      POSTGRES_PASSWORD: "{{ secrets.postgres.password }}"
      SCHEDULE: '@daily'
      BACKUP_KEEP_DAYS: 2
      HEALTHCHECK_PORT: 8080
    deploy:
      placement:
        constraints:
          - node.hostname == {{ placement.backup }}


configs:
  nginx-default:         {{ compose_configs['default.conf'] }}
  nginx-location-common: {{ compose_configs['location-common.conf'] }}
  nginx-proxy-include:   {{ compose_configs['proxy-include.conf'] }}
  nginx-ssl:             {{ compose_configs['ssl.conf'] }}
  modsecurity-main:      {{ compose_configs['modsecurity.conf'] }}
  modsecurity-setup:     {{ compose_configs['setup.conf'] }}
  empty-sh:              {{ compose_configs['empty.sh'] }}

networks:
  main:
  keycloak:

volumes:
  data:
  backups:
  keycloak-data:
